/*1012. 数字分类 (20)

给定一系列正整数，请按要求对数字进行分类，并输出以下5个数字：

A1 = 能被5整除的数字中所有偶数的和；
A2 = 将被5除后余1的数字按给出顺序进行交错求和，即计算n1-n2+n3-n4...；
A3 = 被5除后余2的数字的个数；
A4 = 被5除后余3的数字的平均数，精确到小数点后1位；
A5 = 被5除后余4的数字中最大数字。
输入格式：

每个输入包含1个测试用例。每个测试用例先给出一个不超过1000的正整数N，随后给出N个不超过1000的待分类的正整数。数字间以空格分隔。

输出格式：

对给定的N个正整数，按题目要求计算A1~A5并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。

若其中某一类数字不存在，则在相应位置输出“N”。

输入样例1：
13 1 2 3 4 5 6 7 8 9 10 20 16 18
输出样例1：
30 11 2 9.7 9
输入样例2：
8 1 2 4 5 6 7 9 16
输出样例2：
N 11 2 N 9
*/
#include <stdio.h>
int main()
{
  int N,a[1010],A[10]={0},count2=0,count4=0;
  scanf("%d",&N);
  for(int i=0;i<N;i++) scanf("%d",&a[i]);
  for(int i=0;i<N;i++)
  {
    if(a[i]%5==0&&a[i]%2==0) A[1]+=a[i];
    else if(a[i]%5==1)
    {
      if(count2%2==0) A[2]+=a[i];
      else A[2]-=a[i];
      count2++;
    }
    else if(a[i]%5==2) A[3]++;
    else if(a[i]%5==3)
    {
      A[4]+=a[i];
      count4++;
    }
    else
    {
    if(a[i]%5==4&&a[i]>A[5]) A[5]=a[i];
    }
  }
  if(A[1]==0) printf("N ");
  else printf("%d ",A[1]);
  if(count2==0) printf("N ");
  else printf("%d ",A[2]);
  if(A[3]==0) printf("N ");
  else printf("%d ",A[3]);
  if(A[4]==0) printf("N ");
  else printf("%.1f ",(double)A[4]/count4);
  if(A[5]==0) printf("N");
  else printf("%d",A[5]);
  return 0;
}
